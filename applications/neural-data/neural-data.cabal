-- Initial neural-circuits.cabal generated by cabal init.  For further
-- documentation, see http://haskell.org/cabal/users-guide/

name:                neural-data
version:             0.13
synopsis:            Developing and applying neural circuit models
license:             BSD3
license-file:        LICENSE
author:              Sacha Sokoloski
maintainer:          sacha.sokoloski@gmail.com
category:            Data
build-type:          Simple
cabal-version:       >=1.10

data-dir: data
data-files: plots/neural-data-cv.gpi
    , patterson-2013/big40/105r62/*.csv
    , patterson-2013/big40/107l114/*.csv
    , patterson-2013/big40/112r29/*.csv
    , patterson-2013/big40/112r32/*.csv
    , patterson-2013/small40/112l44/*.csv
    , patterson-2013/small40/112l45/*.csv
    , patterson-2013/small40/112r35/*.csv
    , patterson-2013/small40/112r36/*.csv
    , coen-cagli-2015/*.csv


executable neural-data-cv
  hs-source-dirs: executables
  main-is: neural-data-cv.hs
  other-modules: NeuralData, Paths_neural_data
  build-depends:
      base,
      goal-core,
      goal-geometry,
      goal-probability,
      goal-simulation,
      vector,
      vector-sized,
      mwc-random,
      ghc-typelits-knownnat,
      ghc-typelits-natnormalise,
      math-functions,
      cassava,
      process,
      containers
  default-language: Haskell2010
  ghc-options: -O2 -Wall -fplugin=GHC.TypeLits.KnownNat.Solver -fplugin=GHC.TypeLits.Normalise -fconstraint-solver-iterations=10

executable process-patterson-2013
  hs-source-dirs: executables
  main-is: process-patterson-2013.hs
  other-modules: Paths_neural_data
  build-depends:
      base,
      goal-core,
      goal-geometry,
      goal-probability,
      directory,
      vector,
      cassava,
      bytestring,
      containers
  default-language: Haskell2010
  ghc-options: -O2 -Wall

executable process-coen-cagli-2015
  hs-source-dirs: executables
  main-is: process-coen-cagli-2015.hs
  build-depends:
      base,
      goal-core,
      directory,
      vector,
      cassava,
      containers
  default-language: Haskell2010
  ghc-options: -O2 -Wall

--executable neural-information-analysis
--  hs-source-dirs: executables
--  main-is: neural-information-analysis.hs
--  other-modules: NeuralData, Paths_neural_data
--  build-depends:
--      base,
--      goal-core,
--      goal-geometry,
--      goal-probability,
--      goal-simulation,
--      vector,
--      vector-sized,
--      mwc-random,
--      ghc-typelits-knownnat,
--      ghc-typelits-natnormalise,
--      math-functions,
--      ad,
--      cassava,
--      containers
--  default-language: Haskell2010
--  ghc-options: -O2 -Wall -fplugin=GHC.TypeLits.KnownNat.Solver -fplugin=GHC.TypeLits.Normalise -fconstraint-solver-iterations=10
--

--executable neural-von-mises-analysis
--  hs-source-dirs: executables
--  main-is: neural-von-mises-analysis.hs
--  other-modules: NeuralData
--  build-depends:
--      base,
--      goal-core,
--      goal-geometry,
--      goal-probability,
--      goal-simulation,
--      vector,
--      vector-sized,
--      mwc-random,
--      ghc-typelits-knownnat,
--      ghc-typelits-natnormalise,
--      math-functions,
--      ad,
--      containers
--  default-language: Haskell2010
--  ghc-options: -O2 -Wall -fplugin=GHC.TypeLits.KnownNat.Solver -fplugin=GHC.TypeLits.Normalise -fconstraint-solver-iterations=10
--
